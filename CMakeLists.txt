# Autogenerated file, run tools/build/setup_cmake.py to regenerate

project(IMP.membrane)



imp_get_process_exit_code("Setting up module membrane" status ${CMAKE_BINARY_DIR}
                          COMMAND ${CMAKE_SOURCE_DIR}/tools/build/setup_module.py
                          --name=membrane
                          --datapath=${IMP_DATAPATH}
                          --defines=${IMP_membrane_CONFIG}:
                           --source=${CMAKE_SOURCE_DIR})
if(${status} EQUAL 0)
  imp_execute_process("setup_swig_wrappers membrane" ${CMAKE_BINARY_DIR}
    COMMAND ${CMAKE_SOURCE_DIR}/tools/build/setup_swig_wrappers.py
    --module=membrane
    --datapath=${IMP_DATAPATH}
    --source=${CMAKE_SOURCE_DIR})

  # for warning control
  add_definitions(-DIMPMEMBRANE_COMPILATION)

  set(allh_command  "python" "${CMAKE_SOURCE_DIR}/tools/dev_tools/make_all_header.py" "${CMAKE_BINARY_DIR}/include/IMP/membrane.h" "IMP/membrane" "${PROJECT_SOURCE_DIR}/include/" ${IMP_membrane_EXTRA_HEADERS})
  # for swig
  imp_execute_process("IMP.membrane making all header" ${PROJECT_BINARY_DIR}
                   COMMAND ${allh_command})

  add_custom_target(IMP.membrane-all-header
    COMMAND ${allh_command}
    DEPENDS "${CMAKE_SOURCE_DIR}/tools/dev_tools/make_all_header.py")
  set_property(TARGET "IMP.membrane-all-header" PROPERTY FOLDER "IMP.membrane")
  list(APPEND IMP_membrane_LIBRARY_EXTRA_DEPENDENCIES IMP.membrane-all-header)


  if(IMP_DOXYGEN_FOUND)
    # documentation
    file(GLOB headers ${CMAKE_BINARY_DIR}/include/IMP/membrane/*.h)
    file(GLOB docs ${CMAKE_SOURCE_DIR}/modules/membrane/doc/*.dox
      ${CMAKE_SOURCE_DIR}/modules/membrane/doc/*.md)
    file(GLOB examples ${CMAKE_BINARY_DIR}/doc/examples/membrane/*.py
      ${CMAKE_BINARY_DIR}/doc/examples/membrane/*.cpp)

    add_custom_command(OUTPUT ${CMAKE_BINARY_DIR}/doxygen/membrane/tags ${CMAKE_BINARY_DIR}/doxygen/membrane/xml/index.xml
      COMMAND mkdir -p ${CMAKE_BINARY_DIR}/doc/html
      COMMAND ln -s -f ../../include
      COMMAND ln -s -f ../../doc/examples
      COMMAND ln -s -f ../../lib
      COMMAND ${IMP_DOXYGEN_EXECUTABLE} ../../doxygen/membrane/Doxyfile 2>&1 /dev/null
      COMMAND ${CMAKE_SOURCE_DIR}/tools/build/doxygen_patch_tags.py --module=membrane --file=../../doxygen/membrane/tags
      COMMAND ${CMAKE_SOURCE_DIR}/tools/build/doxygen_show_warnings.py --warn=../../doxygen/membrane/warnings.txt
      DEPENDS ${IMP_base_DOC}
${IMP_cgal_DOC}
${IMP_mpi_DOC}
${IMP_algebra_DOC}
${IMP_kernel_DOC}
${IMP_display_DOC}
${IMP_gsl_DOC}
${IMP_score_functor_DOC}
${IMP_statistics_DOC}
${IMP_core_DOC}
${IMP_container_DOC}
${IMP_symmetry_DOC}
${IMP_atom_DOC}
${IMP_em_DOC}
${IMP_rmf_DOC}
${IMP_saxs_DOC}
${IMP_domino_DOC}
${IMP_isd_DOC}
${IMP_em2d_DOC} ${headers} ${docs} ${examples} ${CMAKE_SOURCE_DIR}/modules/membrane/README.md IMP.membrane-python
      WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/doxygen/membrane/
      COMMENT "Running doxygen on membrane")

    add_custom_target("IMP.membrane-doc" ALL DEPENDS ${CMAKE_BINARY_DIR}/doxygen/membrane/tags)
    set_property(TARGET "IMP.membrane-doc" PROPERTY FOLDER "IMP.membrane")
    set(IMP_membrane_DOC "IMP.membrane-doc" CACHE INTERNAL "" FORCE)

    list(APPEND IMP_DOC_DEPENDS "${IMP.membrane-python}")
    list(REMOVE_DUPLICATES IMP_DOC_DEPENDS)
    set(IMP_DOC_DEPENDS ${IMP_DOC_DEPENDS} CACHE INTERNAL "" FORCE)
  else()
    set(IMP_membrane_DOC "" CACHE INTERNAL "" FORCE)
  endif(IMP_DOXYGEN_FOUND)

  list(APPEND imp_membrane_libs ${IMP_base_LIBRARY};${IMP_cgal_LIBRARY};${IMP_mpi_LIBRARY};${IMP_algebra_LIBRARY};${IMP_kernel_LIBRARY};${IMP_display_LIBRARY};${IMP_gsl_LIBRARY};${IMP_score_functor_LIBRARY};${IMP_statistics_LIBRARY};${IMP_core_LIBRARY};${IMP_container_LIBRARY};${IMP_symmetry_LIBRARY};${IMP_atom_LIBRARY};${IMP_em_LIBRARY};${IMP_rmf_LIBRARY};${IMP_saxs_LIBRARY};${IMP_domino_LIBRARY};${IMP_isd_LIBRARY};${IMP_em2d_LIBRARY})
  list(APPEND imp_membrane_libs ${BOOST.FILESYSTEM_LIBRARIES};${BOOST.PROGRAMOPTIONS_LIBRARIES};${BOOST.SYSTEM_LIBRARIES};${GPERFTOOLS_LIBRARIES};${TCMALLOC_HEAPPROFILER_LIBRARIES};${TCMALLOC_HEAPCHECKER_LIBRARIES};${BOOST.RANDOM_LIBRARIES};${CGAL_LIBRARIES};${MPI_LIBRARIES};${ANN_LIBRARIES};${GSL_LIBRARIES};${HDF5_LIBRARIES};${BOOST.REGEX_LIBRARIES};${RMF_LIBRARIES};${BOOST.GRAPH_LIBRARIES};${FFTW3_LIBRARIES};${OPENCV21_LIBRARIES};${OPENCV22_LIBRARIES})
  list(REMOVE_DUPLICATES imp_membrane_libs)

  add_custom_command(OUTPUT ${CMAKE_BINARY_DIR}/lib/IMP/membrane/_version_check.py
                            ${CMAKE_BINARY_DIR}/src/membrane_config.cpp
    COMMAND ${CMAKE_SOURCE_DIR}/tools/build/make_module_version.py --name=membrane --datapath=${IMP_DATAPATH} --source=${CMAKE_SOURCE_DIR}
    DEPENDS IMP-version
    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/
    COMMENT "Building module version info")

  add_custom_target("IMP.membrane-version" ALL DEPENDS
                          ${CMAKE_BINARY_DIR}/lib/IMP/membrane/_version_check.py
                          ${CMAKE_BINARY_DIR}/src/membrane_config.cpp)
  set_property(TARGET "IMP.membrane-version" PROPERTY FOLDER "IMP.membrane")
  install(FILES "${CMAKE_BINARY_DIR}/lib/IMP/membrane/_version_check.py" DESTINATION "${CMAKE_INSTALL_PYTHONDIR}/IMP/membrane/")

  add_subdirectory(${CMAKE_SOURCE_DIR}/modules/membrane/src)
add_subdirectory(${CMAKE_SOURCE_DIR}/modules/membrane/test)
add_subdirectory(${CMAKE_SOURCE_DIR}/modules/membrane/examples)
add_subdirectory(${CMAKE_SOURCE_DIR}/modules/membrane/benchmark)
add_subdirectory(${CMAKE_SOURCE_DIR}/modules/membrane/bin)
  set(IMP_membrane "IMP.membrane" CACHE INTERNAL "" FORCE)
else()

  # make sure it is empty
  set(IMP_membrane_DOC "" CACHE INTERNAL "" FORCE)
  set(IMP_membrane_PYTHON "" CACHE INTERNAL "" FORCE)
  set(IMP_membrane "" CACHE INTERNAL "" FORCE)

  if(${status} EQUAL 1)
    message("Module IMP.membrane disabled")
  else()
    message(FATAL_ERROR "setup_module returned ${status}")
  endif()
  set(IMP_membrane_LIBRARY CACHE INTERNAL "" FORCE)
endif()
