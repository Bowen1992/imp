# Autogenerated file, run tools/build/setup_cmake.py to regenerate

FILE(GLOB gensources
     "${CMAKE_BINARY_DIR}/src/membrane/*.cpp")

FILE(GLOB genheaders
     "${CMAKE_BINARY_DIR}/include/IMP/membrane/*.h")

include_directories(${ANN_INCLUDE_PATH}
        ${BOOST.FILESYSTEM_INCLUDE_PATH}
        ${BOOST.GRAPH_INCLUDE_PATH}
        ${BOOST.PROGRAMOPTIONS_INCLUDE_PATH}
        ${BOOST.RANDOM_INCLUDE_PATH}
        ${BOOST.REGEX_INCLUDE_PATH}
        ${BOOST.SYSTEM_INCLUDE_PATH}
        ${CGAL_INCLUDE_PATH}
        ${FFTW3_INCLUDE_PATH}
        ${GPERFTOOLS_INCLUDE_PATH}
        ${GSL_INCLUDE_PATH}
        ${HDF5_INCLUDE_PATH}
        ${MPI_INCLUDE_PATH}
        ${OPENCV21_INCLUDE_PATH}
        ${OPENCV22_INCLUDE_PATH}
        ${RMF_INCLUDE_PATH}
        ${TCMALLOC_HEAPCHECKER_INCLUDE_PATH}
        ${TCMALLOC_HEAPPROFILER_INCLUDE_PATH})
link_directories(${ANN_LINK_PATH}
        ${BOOST.FILESYSTEM_LINK_PATH}
        ${BOOST.GRAPH_LINK_PATH}
        ${BOOST.PROGRAMOPTIONS_LINK_PATH}
        ${BOOST.RANDOM_LINK_PATH}
        ${BOOST.REGEX_LINK_PATH}
        ${BOOST.SYSTEM_LINK_PATH}
        ${CGAL_LINK_PATH}
        ${FFTW3_LINK_PATH}
        ${GPERFTOOLS_LINK_PATH}
        ${GSL_LINK_PATH}
        ${HDF5_LINK_PATH}
        ${MPI_LINK_PATH}
        ${OPENCV21_LINK_PATH}
        ${OPENCV22_LINK_PATH}
        ${RMF_LINK_PATH}
        ${TCMALLOC_HEAPCHECKER_LINK_PATH}
        ${TCMALLOC_HEAPPROFILER_LINK_PATH})
add_definitions("-DIMPMEMBRANE_EXPORTS")

include(Files.cmake)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${MEMBRANE_CXX_FLAGS}")

set(headers ${CMAKE_SOURCE_DIR}/modules/membrane/include/AttributeDistancePairScore.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/BoxedMover.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/CellMover.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/ChiSquareMetric.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/ContactMapMetric.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/DiameterRgyrRestraint.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/DistanceRMSDMetric.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/EM2DRestraint.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/EzRestraint.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/Gaussian.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/HelixDecorator.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/ISDRestraint.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/KinkPairScore.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/LangevinThermostatOptimizerState.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/MolecularDynamicsWithWte.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/MonteCarloWithWte.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/NuisanceRangeModifier.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/PbcBoxedMover.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/PbcBoxedRigidBodyMover.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/RMSDMetric.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/RigidBodyGridStates.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/RigidBodyNewMover.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/RigidBodyPackingScore.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/SameParticlePairFilter.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/SameRigidBodyPairFilter.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/Sigmoid.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/TiltSingletonScore.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/TransformationSymmetry.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/TwoStateGoModelRestraint.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/UniformBoundedRestraint.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/pt_stuff.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/spb_ISD_particles.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/spb_assemble_restraints.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/spb_main.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/spb_parser.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/spb_representation.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/spb_restraint.h
${CMAKE_SOURCE_DIR}/modules/membrane/include/spb_sampler.h)

if(DEFINED IMP_membrane_LIBRARY_EXTRA_SOURCES)
  set_source_files_properties(${IMP_membrane_LIBRARY_EXTRA_SOURCES}
                              PROPERTIES GENERATED 1)
endif()
set_source_files_properties(${CMAKE_BINARY_DIR}/src/membrane_config.cpp
  PROPERTIES GENERATED 1)

if(DEFINED IMP_membrane_IS_PER_CPP)
  set(sources ${cppfiles})
  add_library(IMP.membrane-lib  ${IMP_LIB_TYPE} ${gensources} ${genheaders}
              ${headers} ${sources}
              ${CMAKE_BINARY_DIR}/src/membrane_config.cpp
              ${IMP_membrane_LIBRARY_EXTRA_SOURCES}
              )
else()
  add_library(IMP.membrane-lib  ${IMP_LIB_TYPE} ${gensources} ${genheaders}
              ${headers} ${CMAKE_BINARY_DIR}/src/membrane_all.cpp
              ${CMAKE_BINARY_DIR}/src/membrane_config.cpp
              ${IMP_membrane_LIBRARY_EXTRA_SOURCES}
              )
endif()
set_target_properties(IMP.membrane-lib PROPERTIES
                      OUTPUT_NAME imp_membrane)

# Note that soversion is only set if a version is set in the *source* directory.
# This is because we have to set soversion at cmake, not build, time. All stable
# releases have a VERSION file in the source directory, so this should be OK.
IF (EXISTS ${CMAKE_SOURCE_DIR}/modules/membrane/VERSION)
  file(STRINGS ${CMAKE_SOURCE_DIR}/modules/membrane/VERSION sover
       REGEX "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$")
ELSEIF(EXISTS ${CMAKE_SOURCE_DIR}/VERSION)
  file(STRINGS ${CMAKE_SOURCE_DIR}/VERSION sover
       REGEX "^[0-9]+\\.[0-9]+(\\.[0-9]+)?$")
ENDIF()
IF (NOT "${sover}" STREQUAL "")
  set_target_properties(IMP.membrane-lib PROPERTIES
                        VERSION ${sover} SOVERSION ${sover})
ENDIF()

set_property(TARGET "IMP.membrane-lib" PROPERTY FOLDER "IMP.membrane")

INSTALL(TARGETS IMP.membrane-lib DESTINATION ${CMAKE_INSTALL_LIBDIR})

add_dependencies(IMP.membrane-lib IMP.membrane-version)

if(DEFINED IMP_membrane_LIBRARY_EXTRA_DEPENDENCIES)
  add_dependencies(IMP.membrane-lib ${IMP_membrane_LIBRARY_EXTRA_DEPENDENCIES})
endif()

target_link_libraries(IMP.membrane-lib ${imp_membrane_libs})

set(IMP_membrane_LIBRARY IMP.membrane-lib CACHE INTERNAL "" FORCE)
