show_exceptions=['Decorator', "ParticlePair", "ParticleTriplet", "ParticleQuad",
                 'RandomNumberGenerator',"Timer"]
function_name_exceptions=[
    'deprecated_module',
    'deprecated_function',
    'deprecated_method',
    'deprecated_object',
    'allow_deprecated',
    'RandomNumberGenerator.seed', 'setup_from_argv',
    'Particle.has_attribute', 'Model.restore_particle',
    'RandomNumberGenerator.seed',
    'CommandDispatcher.import_module',
    'CommandDispatcher.main',
    'CommandDispatcher.unknown_command',
    'check_particle',
    'OptionParser.check_values',
    'OptionParser.disable_interspersed_args',
    'OptionParser.enable_interspersed_args',
    'OptionParser.error',
    'OptionParser.exit',
    'OptionParser.expand_prog_name',
    'OptionParser.format_description',
    'OptionParser.format_epilog',
    'OptionParser.format_help',
    'OptionParser.format_option_help',
    'OptionParser.has_option',
    'OptionParser.parse_args',
    'OptionParser.print_help',
    'OptionParser.print_usage',
    'OptionParser.print_version']
value_object_exceptions=['Exception', 'TypeException',
                                            'IOException', 'IndexException',
                                           'InternalException',
                                            'ModelException',
                                            'PairFunctor',
                                           'QuadFunctor',
                                            'RandomNumberGenerator',
                                           'ValueException',
                                           'FailureHandlerBase',
                                            "TextInput", "TextOutput", "RefCounted", "Timer",
                       'Decorator', 'DerivativeAccumulator',
                                           'RestraintBase', 'ScoreStateBase']
spelling_exceptions=["undecorator", "undecorate", "altgraph", "networkx"]
doc_spelling_exceptions=["optparse", "OptionParser", "num", "args", "pyext",
           "src", "py", "docstring", "multifit", "cnmultifit"]
