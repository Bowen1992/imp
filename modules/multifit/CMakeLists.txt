# Autogenerated file, run tools/build/setup_cmake.py to regenerate

add_subdirectory(${PROJECT_SOURCE_DIR}/modules/multifit/dependency)

imp_get_process_exit_code("setup_module multifit" status ${PROJECT_BINARY_DIR}
                          COMMAND ${PROJECT_SOURCE_DIR}/tools/build/setup_module.py
                          --name=multifit
                          --datapath=${IMP_DATAPATH}
                          --defines=${IMP_MULTIFIT_CONFIG}:
                           --source=${PROJECT_SOURCE_DIR})
if(${status} EQUAL 0)
message("Module IMP.multifit ok")
imp_execute_process("setup_swig_wrappers multifit" ${PROJECT_BINARY_DIR}
                    COMMAND ${PROJECT_SOURCE_DIR}/tools/build/setup_swig_wrappers.py
                          --module=multifit
                          --datapath=${IMP_DATAPATH}
                           --source=${PROJECT_SOURCE_DIR})

if(DOXYGEN_FOUND)
# documentation
add_custom_command(OUTPUT ${PROJECT_BINARY_DIR}/doxygen/multifit/tags ${PROJECT_BINARY_DIR}/doc/html/multifit/index.html
   COMMAND mkdir -p ${PROJECT_BINARY_DIR}/doc/html
   COMMAND ln -s -f ../../include
   COMMAND ln -s -f ../../doc/examples
   COMMAND ln -s -f ../../lib
   COMMAND ${DOXYGEN_EXECUTABLE} ../../doxygen/multifit/Doxyfile
   COMMAND ${PROJECT_SOURCE_DIR}/tools/build/doxygen_patch_tags.py --module=multifit --file=../../doxygen/multifit/tags
   COMMAND ${PROJECT_SOURCE_DIR}/tools/build/doxygen_show_warnings.py --warn=../../doxygen/multifit/warnings.txt
   DEPENDS ${PROJECT_BINARY_DIR}/doxygen/base/tags
${PROJECT_BINARY_DIR}/doxygen/cgal/tags
${PROJECT_BINARY_DIR}/doxygen/algebra/tags
${PROJECT_BINARY_DIR}/doxygen/kernel/tags
${PROJECT_BINARY_DIR}/doxygen/display/tags
${PROJECT_BINARY_DIR}/doxygen/score_functor/tags
${PROJECT_BINARY_DIR}/doxygen/statistics/tags
${PROJECT_BINARY_DIR}/doxygen/core/tags
${PROJECT_BINARY_DIR}/doxygen/container/tags
${PROJECT_BINARY_DIR}/doxygen/atom/tags
${PROJECT_BINARY_DIR}/doxygen/em/tags
${PROJECT_BINARY_DIR}/doxygen/rmf/tags
${PROJECT_BINARY_DIR}/doxygen/domino/tags
   WORKING_DIRECTORY ${PROJECT_BINARY_DIR}/doxygen/multifit/
   COMMENT "Running doxygen on multifit")

add_custom_target("IMP.multifit-doc" ALL DEPENDS ${PROJECT_BINARY_DIR}/doxygen/multifit/tags)

set(IMP_multifit_DOC ${PROJECT_BINARY_DIR}/doxygen/multifit/tags CACHE INTERNAL "" FORCE)

set(IMP_DOC_DEPENDS ${IMP_DOC_DEPENDS}
                    ${PROJECT_BINARY_DIR}/doxygen/multifit/tags CACHE INTERNAL "" FORCE)
endif(DOXYGEN_FOUND)

add_subdirectory(${PROJECT_SOURCE_DIR}/modules/multifit/src)
add_subdirectory(${PROJECT_SOURCE_DIR}/modules/multifit/test)
add_subdirectory(${PROJECT_SOURCE_DIR}/modules/multifit/examples)
add_subdirectory(${PROJECT_SOURCE_DIR}/modules/multifit/benchmark)
add_subdirectory(${PROJECT_SOURCE_DIR}/modules/multifit/bin)
else()
if(${status} EQUAL 1)
message("Module IMP.multifit disabled")
else()
message(FATAL_ERROR "setup_module returned ${status}")
endif()
set(IMP_MULTIFIT_LIBRARY CACHE INTERNAL "" FORCE)
endif()
