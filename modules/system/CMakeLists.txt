# Autogenerated file, run tools/build/setup_cmake.py to regenerate



imp_get_process_exit_code("setup_module system" status ${PROJECT_BINARY_DIR}
                          COMMAND ${PROJECT_SOURCE_DIR}/tools/build/setup_module.py
                          --name=system
                          --datapath=${IMP_DATAPATH}
                          --defines=${IMP_SYSTEM_CONFIG}:
                           --source=${PROJECT_SOURCE_DIR})
if(${status} EQUAL 0)
message("Module IMP.system ok")
imp_execute_process("setup_swig_wrappers system" ${PROJECT_BINARY_DIR}
                    COMMAND ${PROJECT_SOURCE_DIR}/tools/build/setup_swig_wrappers.py
                          --module=system
                          --datapath=${IMP_DATAPATH}
                           --source=${PROJECT_SOURCE_DIR})

if(DOXYGEN_FOUND)
# documentation
add_custom_command(OUTPUT ${PROJECT_BINARY_DIR}/doxygen/system/tags ${PROJECT_BINARY_DIR}/doc/html/system/index.html
   COMMAND mkdir -p ${PROJECT_BINARY_DIR}/doc/html
   COMMAND ln -s -f ../../include
   COMMAND ln -s -f ../../doc/examples
   COMMAND ln -s -f ../../lib
   COMMAND ${DOXYGEN_EXECUTABLE} ../../doxygen/system/Doxyfile
   COMMAND ${PROJECT_SOURCE_DIR}/tools/build/doxygen_patch_tags.py --module=system --file=../../doxygen/system/tags
   COMMAND ${PROJECT_SOURCE_DIR}/tools/build/doxygen_show_warnings.py --warn=../../doxygen/system/warnings.txt
   DEPENDS ${PROJECT_BINARY_DIR}/doxygen/base/tags
${PROJECT_BINARY_DIR}/doxygen/cgal/tags
${PROJECT_BINARY_DIR}/doxygen/algebra/tags
${PROJECT_BINARY_DIR}/doxygen/kernel/tags
   WORKING_DIRECTORY ${PROJECT_BINARY_DIR}/doxygen/system/
   COMMENT "Running doxygen on system")

add_custom_target("IMP.system-doc" ALL DEPENDS ${PROJECT_BINARY_DIR}/doxygen/system/tags)

set(IMP_DOC_DEPENDS ${IMP_DOC_DEPENDS} "IMP.system-doc" CACHE INTERNAL "" FORCE)
endif(DOXYGEN_FOUND)

add_subdirectory(${PROJECT_SOURCE_DIR}/modules/system/src)
add_subdirectory(${PROJECT_SOURCE_DIR}/modules/system/test)
add_subdirectory(${PROJECT_SOURCE_DIR}/modules/system/examples)
add_subdirectory(${PROJECT_SOURCE_DIR}/modules/system/benchmark)
add_subdirectory(${PROJECT_SOURCE_DIR}/modules/system/bin)
else()
if(${status} EQUAL 1)
message("Module IMP.system disabled")
else()
message(FATAL_ERROR "setup_module returned ${status}")
endif()
set(IMP_SYSTEM_LIBRARY CACHE INTERNAL "" FORCE)
endif()
