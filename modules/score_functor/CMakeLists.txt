# Autogenerated file, run tools/build/setup_cmake.py to regenerate



imp_get_process_exit_code("setup_module score_functor" status ${PROJECT_BINARY_DIR}
                          COMMAND ${PROJECT_SOURCE_DIR}/tools/build/setup_module.py
                          --name=score_functor
                          --datapath=${IMP_DATAPATH}
                          --defines=${IMP_SCORE_FUNCTOR_CONFIG}:
                           --source=${PROJECT_SOURCE_DIR})
if(${status} EQUAL 0)
message("Module IMP.score_functor ok")
imp_execute_process("setup_swig_wrappers score_functor" ${PROJECT_BINARY_DIR}
                    COMMAND ${PROJECT_SOURCE_DIR}/tools/build/setup_swig_wrappers.py
                          --module=score_functor
                          --datapath=${IMP_DATAPATH}
                           --source=${PROJECT_SOURCE_DIR})

if(DOXYGEN_FOUND)
# documentation
add_custom_command(OUTPUT ${PROJECT_BINARY_DIR}/doxygen/score_functor/tags ${PROJECT_BINARY_DIR}/doc/html/score_functor/index.html
   COMMAND mkdir -p doc/html
   COMMAND ${DOXYGEN_EXECUTABLE} doxygen/score_functor/Doxyfile
   COMMAND ${PROJECT_SOURCE_DIR}/tools/build/doxygen_patch_tags.py --module=score_functor --file=doxygen/score_functor/tags
   COMMAND ${PROJECT_SOURCE_DIR}/tools/build/doxygen_show_warnings.py --warn=${PROJECT_BINARY_DIR}/doxygen/score_functor/warnings.txt
   DEPENDS ${PROJECT_BINARY_DIR}/doxygen/base/tags
${PROJECT_BINARY_DIR}/doxygen/cgal/tags
${PROJECT_BINARY_DIR}/doxygen/algebra/tags
${PROJECT_BINARY_DIR}/doxygen/kernel/tags
   WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
   COMMENT "Running doxygen on score_functor")

add_custom_target("IMP.score_functor-doc" ALL DEPENDS ${PROJECT_BINARY_DIR}/doxygen/score_functor/tags)

set(IMP_DOC_DEPENDS ${IMP_DOC_DEPENDS} "IMP.score_functor-doc" CACHE INTERNAL "" FORCE)
endif(DOXYGEN_FOUND)

add_subdirectory(${PROJECT_SOURCE_DIR}/modules/score_functor/src)
add_subdirectory(${PROJECT_SOURCE_DIR}/modules/score_functor/test)
add_subdirectory(${PROJECT_SOURCE_DIR}/modules/score_functor/examples)
add_subdirectory(${PROJECT_SOURCE_DIR}/modules/score_functor/benchmark)
add_subdirectory(${PROJECT_SOURCE_DIR}/modules/score_functor/bin)
else()
if(${status} EQUAL 1)
message("Module IMP.score_functor disabled")
else()
message(FATAL_ERROR "setup_module returned ${status}")
endif()
set(IMP_SCORE_FUNCTOR_LIBRARY CACHE INTERNAL "" FORCE)
endif()
