# Autogenerated file, run tools/build/setup_cmake.py to regenerate

imp_get_process_exit_code("setup_application saxs_merge" status ${PROJECT_BINARY_DIR}
                          COMMAND ${PROJECT_SOURCE_DIR}/tools/build/setup_application.py
                          --name=saxs_merge
                          --datapath=${IMP_DATAPATH}
                           --source=${PROJECT_SOURCE_DIR})
if(${status} EQUAL 0)
message("Application IMP.saxs_merge ok")
include_directories(${ANN_INCLUDE_PATH}
        ${BOOST.FILESYSTEM_INCLUDE_PATH}
        ${BOOST.PROGRAMOPTIONS_INCLUDE_PATH}
        ${BOOST.RANDOM_INCLUDE_PATH}
        ${BOOST.REGEX_INCLUDE_PATH}
        ${BOOST.SYSTEM_INCLUDE_PATH}
        ${CGAL_INCLUDE_PATH}
        ${CHOLMOD_INCLUDE_PATH}
        ${EIGEN3_INCLUDE_PATH}
        ${GPERFTOOLS_INCLUDE_PATH}
        ${GSL_INCLUDE_PATH}
        ${LOG4CXX_INCLUDE_PATH}
        ${TCMALLOC_HEAPCHECKER_INCLUDE_PATH}
        ${TCMALLOC_HEAPPROFILER_INCLUDE_PATH} )
link_directories(${ANN_LINK_PATH}
        ${BOOST.FILESYSTEM_LINK_PATH}
        ${BOOST.PROGRAMOPTIONS_LINK_PATH}
        ${BOOST.RANDOM_LINK_PATH}
        ${BOOST.REGEX_LINK_PATH}
        ${BOOST.SYSTEM_LINK_PATH}
        ${CGAL_LINK_PATH}
        ${CHOLMOD_LINK_PATH}
        ${EIGEN3_LINK_PATH}
        ${GPERFTOOLS_LINK_PATH}
        ${GSL_LINK_PATH}
        ${LOG4CXX_LINK_PATH}
        ${TCMALLOC_HEAPCHECKER_LINK_PATH}
        ${TCMALLOC_HEAPPROFILER_LINK_PATH})


add_custom_target("IMP.saxs_merge" ALL DEPENDS ${bins})


set(pybins ${PROJECT_SOURCE_DIR}/applications/saxs_merge/saxs_merge.py)
foreach (pybin ${pybins})
  install(PROGRAMS ${pybin} DESTINATION ${CMAKE_INSTALL_BINDIR})
endforeach(pybin)

set(pytests ${PROJECT_SOURCE_DIR}/applications/saxs_merge/test/test_merge.py
${PROJECT_SOURCE_DIR}/applications/saxs_merge/test/test_merge2.py
${PROJECT_SOURCE_DIR}/applications/saxs_merge/test/test_profile.py)
foreach (test ${pytests})
  GET_FILENAME_COMPONENT(name ${test} NAME)
  add_test("saxs_merge.${name}" ${IMP_TEST_SETUP} python ${test})
  set_tests_properties("saxs_merge.${name}" PROPERTIES LABELS "IMP.saxs_merge;test")
endforeach(test)

if(DOXYGEN_FOUND)
# documentation

file(GLOB docs ${PROJECT_SOURCE_DIR}/applications/saxs_merge/*.dox
               ${PROJECT_SOURCE_DIR}/applications/saxs_merge/*.md)

add_custom_command(OUTPUT ${PROJECT_BINARY_DIR}/doxygen/saxs_merge/tags ${PROJECT_BINARY_DIR}/doc/html/saxs_merge/index.html
   COMMAND mkdir -p doc/html
   COMMAND ${DOXYGEN_EXECUTABLE} ../../doxygen/saxs_merge/Doxyfile
   COMMAND ${PROJECT_SOURCE_DIR}/tools/build/doxygen_patch_tags.py --module=saxs_merge --file=../../doxygen/saxs_merge/tags
   COMMAND ${PROJECT_SOURCE_DIR}/tools/build/doxygen_show_warnings.py --warn=../../doxygen/saxs_merge/warnings.txt
   DEPENDS ${IMP_SAXS_DOC}
${IMP_ISD_DOC}
${IMP_GSL_DOC}
${IMP_BASE_DOC}
${IMP_CGAL_DOC}
${IMP_ALGEBRA_DOC}
${IMP_KERNEL_DOC}
${IMP_DISPLAY_DOC}
${IMP_SCORE_FUNCTOR_DOC}
${IMP_STATISTICS_DOC}
${IMP_CORE_DOC}
${IMP_CONTAINER_DOC}
${IMP_ATOM_DOC}
${IMP_EM_DOC}
${IMP_SAXS_DOC} ${docs}
   WORKING_DIRECTORY ${PROJECT_BINARY_DIR}/doxygen/saxs_merge/
   COMMENT "Running doxygen on saxs_merge")

add_custom_target("IMP.saxs_merge-doc" ALL DEPENDS ${PROJECT_BINARY_DIR}/doxygen/saxs_merge/tags)

set(IMP_SAXS_MERGE_DOC "IMP.saxs_merge-doc" CACHE INTERNAL "" FORCE)

set(IMP_DOC_DEPENDS ${IMP_DOC_DEPENDS} ${IMP_SAXS_MERGE_DOC} CACHE INTERNAL "" FORCE)
endif(DOXYGEN_FOUND)

elseif(${status} EQUAL 1)
message("Application saxs_merge disabled")
else()
message(FATAL_ERROR "setup_application failed ${status}")
endif()
