# Autogenerated file, run tools/build/setup_cmake.py to regenerate

imp_get_process_exit_code("setup_application cnmultifit_tools" status ${PROJECT_BINARY_DIR}
                          COMMAND ${PROJECT_SOURCE_DIR}/tools/build/setup_application.py
                          --name=cnmultifit_tools
                          --datapath=${IMP_DATAPATH}
                           --source=${PROJECT_SOURCE_DIR})
if(${status} EQUAL 0)
message("Application IMP.cnmultifit_tools ok")
include_directories(${ANN_INCLUDE_PATH}
        ${BOOST.FILESYSTEM_INCLUDE_PATH}
        ${BOOST.GRAPH_INCLUDE_PATH}
        ${BOOST.PROGRAMOPTIONS_INCLUDE_PATH}
        ${BOOST.RANDOM_INCLUDE_PATH}
        ${BOOST.REGEX_INCLUDE_PATH}
        ${BOOST.SYSTEM_INCLUDE_PATH}
        ${CGAL_INCLUDE_PATH}
        ${FFTW3_INCLUDE_PATH}
        ${GPERFTOOLS_INCLUDE_PATH}
        ${HDF5_INCLUDE_PATH}
        ${LIBTAU_INCLUDE_PATH}
        ${LOG4CXX_INCLUDE_PATH}
        ${RMF_INCLUDE_PATH}
        ${TCMALLOC_HEAPCHECKER_INCLUDE_PATH}
        ${TCMALLOC_HEAPPROFILER_INCLUDE_PATH} )
link_directories(${ANN_LINK_PATH}
        ${BOOST.FILESYSTEM_LINK_PATH}
        ${BOOST.GRAPH_LINK_PATH}
        ${BOOST.PROGRAMOPTIONS_LINK_PATH}
        ${BOOST.RANDOM_LINK_PATH}
        ${BOOST.REGEX_LINK_PATH}
        ${BOOST.SYSTEM_LINK_PATH}
        ${CGAL_LINK_PATH}
        ${FFTW3_LINK_PATH}
        ${GPERFTOOLS_LINK_PATH}
        ${HDF5_LINK_PATH}
        ${LIBTAU_LINK_PATH}
        ${LOG4CXX_LINK_PATH}
        ${RMF_LINK_PATH}
        ${TCMALLOC_HEAPCHECKER_LINK_PATH}
        ${TCMALLOC_HEAPPROFILER_LINK_PATH})


add_custom_target("IMP.cnmultifit_tools" ALL DEPENDS ${bins})


set(pybins ${PROJECT_SOURCE_DIR}/applications/cnmultifit_tools/cnmultifit.py)
foreach (pybin ${pybins})
  install(PROGRAMS ${pybin} DESTINATION ${CMAKE_INSTALL_BINDIR})
endforeach(pybin)

set(pytests ${PROJECT_SOURCE_DIR}/applications/cnmultifit_tools/test/expensive_test_groel_example.py)
foreach (test ${pytests})
  GET_FILENAME_COMPONENT(name ${test} NAME)
  add_test("cnmultifit_tools.${name}" ${IMP_TEST_SETUP} python ${test})
  set_tests_properties("cnmultifit_tools.${name}" PROPERTIES LABELS "IMP.cnmultifit_tools;test")
endforeach(test)

if(DOXYGEN_FOUND)
# documentation

file(GLOB docs ${PROJECT_SOURCE_DIR}/applications/cnmultifit_tools/*.dox
               ${PROJECT_SOURCE_DIR}/applications/cnmultifit_tools/*.md)

add_custom_command(OUTPUT ${PROJECT_BINARY_DIR}/doxygen/cnmultifit_tools/tags ${PROJECT_BINARY_DIR}/doc/html/cnmultifit_tools/index.html
   COMMAND mkdir -p doc/html
   COMMAND ${DOXYGEN_EXECUTABLE} ../../doxygen/cnmultifit_tools/Doxyfile
   COMMAND ${PROJECT_SOURCE_DIR}/tools/build/doxygen_patch_tags.py --module=cnmultifit_tools --file=../../doxygen/cnmultifit_tools/tags
   COMMAND ${PROJECT_SOURCE_DIR}/tools/build/doxygen_show_warnings.py --warn=../../doxygen/cnmultifit_tools/warnings.txt
   DEPENDS ${IMP_CNMULTIFIT_DOC}
${IMP_BASE_DOC}
${IMP_CGAL_DOC}
${IMP_ALGEBRA_DOC}
${IMP_KERNEL_DOC}
${IMP_DISPLAY_DOC}
${IMP_SCORE_FUNCTOR_DOC}
${IMP_STATISTICS_DOC}
${IMP_CORE_DOC}
${IMP_CONTAINER_DOC}
${IMP_ATOM_DOC}
${IMP_EM_DOC}
${IMP_RMF_DOC}
${IMP_DOMINO_DOC}
${IMP_MULTIFIT_DOC} ${docs}
   WORKING_DIRECTORY ${PROJECT_BINARY_DIR}/doxygen/cnmultifit_tools/
   COMMENT "Running doxygen on cnmultifit_tools")

add_custom_target("IMP.cnmultifit_tools-doc" ALL DEPENDS ${PROJECT_BINARY_DIR}/doxygen/cnmultifit_tools/tags)

set(IMP_CNMULTIFIT_TOOLS_DOC "IMP.cnmultifit_tools-doc" CACHE INTERNAL "" FORCE)

set(IMP_DOC_DEPENDS ${IMP_DOC_DEPENDS} ${IMP_CNMULTIFIT_TOOLS_DOC} CACHE INTERNAL "" FORCE)
endif(DOXYGEN_FOUND)

elseif(${status} EQUAL 1)
message("Application cnmultifit_tools disabled")
else()
message(FATAL_ERROR "setup_application failed ${status}")
endif()
